===========
Quick Start
===========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

*Estimated time to complete this guide: 20 minutes.*

This guide shows you how to create an application that uses the Node.js
driver to connect to a MongoDB Atlas cluster.

Requirements
------------

Node and NPM
~~~~~~~~~~~~

Ensure your system has Node version 8 or later and NPM (Node Package
Manager) installed. Run the following commands to check that you meet
these requirements:

Check your versions of Node and NPM by running the following commands in
your local shell:

.. code-block:: sh

   node -v
   npm -v

These commands should print the version of Node and NPM that you have
installed. If you encounter any errors or do not see any output, you need to 
install Node and NPM. Visit `nodejs.org <https://nodejs.org>`_ for 
installation instructions.

Initialize the Project
~~~~~~~~~~~~~~~~~~~~~~

Once you have verified that you have installed both the minimum version of
Node and NPM, create a new project.

Now that our system meets the Node driver's requirements, we can
create a new project.

First, create a directory for your project:


.. tab::

   :tabid: bash::
    
   .. code-block:: sh

      mkdir node_quickstart

   :tabid: powershell::

   .. code-block:: none
      
      md node_quickstart


Then, navigate into that directory so you can work directly with your
project's files:

.. code-block:: sh

  cd node_quickstart

Finally, initialize npm:

.. code-block:: sh

  npm init -y

.. admonition:: Why the -y?
  :class: note

  Specifying ``-y`` tells NPM to use default values. You can omit the
  ``-y`` flag to proceed through an interactive selection process for
  common project settings.

Add MongoDB as a Dependency
---------------------------

Next, add the Node MongoDB driver as a project dependency. Use the
``--save`` flag to save the dependency to the ``package.json`` file that
was automatically generated in the previous step.

.. code-block:: sh

  npm install --save mongodb

NPM downloads the dependencies required for installation and saves them
into a directory called ``node_modules`` in your project directory.

Create a Free Tier Cluster in Atlas
-----------------------------------

You can easily get started with MongoDB with :atlas:`MongoDB Atlas
<tutorial/create-atlas-account>`, which offers instances of MongoDB
hosted in the cloud. Atlas doesn't require a credit card to
sign up, and offers free-tier deployments that are free for life. Follow
along with our :atlas:`steps to create and set up a free-tier cluster
<tutorial/create-atlas-account/>`, then :atlas:`load sample data
<sample-data/load-sample-data/>` to run the examples in this guide.

Connect to your Cluster
-----------------------

For the final step, we'll write some code that tests your environment's
connection to your instance of MongoDB.

Create a file in your project directory called ``index.js``:

.. code-block:: sh

  touch index.js

Open this file and paste in the following code:

.. code-block:: js

  const { MongoClient } = require("mongodb");

  const uri =
    "mongodb+srv://<user>:<password>@<cluster-url>?retryWrites=true&w=majority&useUnifiedTopology=true";
   
  const client = new MongoClient(uri);

  async function run() {
    try {
      // Connect the client to the server
      await client.connect();
      // Establish connection and run a query on your sample data


      console.log("Successfully connected to MongoDB.");
      // your code after this comment

      // your code before this comment
    } finally {
      // Ensures that the client will close when you finish/error
      await client.close();
    }
  }
  run().catch(console.dir);

Run the script with the following command from your terminal:

.. code-block:: sh

  node index.js

You should see the output **Successfully connected to Atlas.**

Next Steps
----------

Learn how to read and modify data in our :doc:`CRUD fundamentals
</fundamentals/crud>` guide, or how to perform common operations in our
:doc:`usage examples </usage-examples>`.
